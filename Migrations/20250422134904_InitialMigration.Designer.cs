// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_app_pizza_flutter.Data;

#nullable disable

namespace api_app_pizza_flutter.Migrations
{
    [DbContext(typeof(AppOrderDbContext))]
    [Migration("20250422134904_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api_app_pizza_flutter.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "AddressID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("AddressName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "AddressName");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "CreatedDate");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "IsDefault");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "UserID");

                    b.HasKey("AddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "CategoryName");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "CreatedDate");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "FeedbackID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<byte>("CheeseRating")
                        .HasColumnType("tinyint")
                        .HasAnnotation("Relational:JsonPropertyName", "CheeseRating");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Comment");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "CreatedDate");

                    b.Property<byte>("CrustRating")
                        .HasColumnType("tinyint")
                        .HasAnnotation("Relational:JsonPropertyName", "CrustRating");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "OrderID");

                    b.Property<byte>("OverallTasteRating")
                        .HasColumnType("tinyint")
                        .HasAnnotation("Relational:JsonPropertyName", "OverallTasteRating");

                    b.Property<byte>("PresentationRating")
                        .HasColumnType("tinyint")
                        .HasAnnotation("Relational:JsonPropertyName", "PresentationRating");

                    b.Property<byte>("SauceRating")
                        .HasColumnType("tinyint")
                        .HasAnnotation("Relational:JsonPropertyName", "SauceRating");

                    b.Property<byte>("ServiceRating")
                        .HasColumnType("tinyint")
                        .HasAnnotation("Relational:JsonPropertyName", "ServiceRating");

                    b.Property<byte>("ToppingRating")
                        .HasColumnType("tinyint")
                        .HasAnnotation("Relational:JsonPropertyName", "ToppingRating");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "UserID");

                    b.HasKey("FeedbackId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "AddressID");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "CreatedDate");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "OrderDate");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "PaymentMethod");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "PromotionID");

                    b.Property<decimal>("ShippingFee")
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "ShippingFee");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Status");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "TotalAmount");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "UserID");

                    b.HasKey("OrderId");

                    b.HasIndex("AddressId");

                    b.HasIndex("PromotionId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "OrderDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<string>("CrustType")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "CrustType");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "OrderID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ProductID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Quantity");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Size");

                    b.Property<int?>("ToppingId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ToppingID");

                    b.Property<decimal>("ToppingPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "ToppingPrice");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "UnitPrice");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ToppingId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "CategoryID");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "CreatedDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Description");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ImageURL");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "Price");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ProductName");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "SubCategoryID");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "PromotionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "CreatedDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Description");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "DiscountPercentage");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "EndDate");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ImageURL");

                    b.Property<string>("PromotionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "PromotionName");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "StartDate");

                    b.HasKey("PromotionId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.PromotionProduct", b =>
                {
                    b.Property<int>("PromotionProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "PromotionProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionProductId"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ProductID");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "PromotionID");

                    b.HasKey("PromotionProductId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionId");

                    b.ToTable("PromotionProducts");
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.Ranking", b =>
                {
                    b.Property<int>("RankingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "RankingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RankingId"));

                    b.Property<decimal>("AverageRating")
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "AverageRating");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "CreatedDate");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Period");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ProductID");

                    b.Property<int>("RankPosition")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "RankPosition");

                    b.HasKey("RankingId");

                    b.HasIndex("ProductId");

                    b.ToTable("Rankings");
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.SubCategory", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "SubCategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCategoryId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "CategoryID");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "CreatedDate");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SubCategoryName");

                    b.HasKey("SubCategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.Suggestion", b =>
                {
                    b.Property<int>("SuggestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "SuggestionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuggestionId"));

                    b.Property<decimal>("Confidence")
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "Confidence");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "CreatedDate");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ProductID");

                    b.Property<int>("SuggestedProductId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "SuggestedProductID");

                    b.HasKey("SuggestionId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SuggestedProductId");

                    b.ToTable("Suggestions");
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.Topping", b =>
                {
                    b.Property<int>("ToppingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ToppingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToppingId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "CreatedDate");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "Price");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ProductID");

                    b.Property<string>("ToppingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ToppingName");

                    b.HasKey("ToppingId");

                    b.HasIndex("ProductId");

                    b.ToTable("Toppings");
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "CreatedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Email");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "PasswordHash");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Phone");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ProfilePicture");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "UserName");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.Address", b =>
                {
                    b.HasOne("api_app_pizza_flutter.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.Feedback", b =>
                {
                    b.HasOne("api_app_pizza_flutter.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_app_pizza_flutter.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.Order", b =>
                {
                    b.HasOne("api_app_pizza_flutter.Models.Address", null)
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("api_app_pizza_flutter.Models.Promotion", null)
                        .WithMany()
                        .HasForeignKey("PromotionId");

                    b.HasOne("api_app_pizza_flutter.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.OrderDetail", b =>
                {
                    b.HasOne("api_app_pizza_flutter.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_app_pizza_flutter.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_app_pizza_flutter.Models.Topping", null)
                        .WithMany()
                        .HasForeignKey("ToppingId");
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.Product", b =>
                {
                    b.HasOne("api_app_pizza_flutter.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_app_pizza_flutter.Models.SubCategory", null)
                        .WithMany()
                        .HasForeignKey("SubCategoryId");
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.PromotionProduct", b =>
                {
                    b.HasOne("api_app_pizza_flutter.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_app_pizza_flutter.Models.Promotion", null)
                        .WithMany()
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.Ranking", b =>
                {
                    b.HasOne("api_app_pizza_flutter.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.SubCategory", b =>
                {
                    b.HasOne("api_app_pizza_flutter.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.Suggestion", b =>
                {
                    b.HasOne("api_app_pizza_flutter.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_app_pizza_flutter.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("SuggestedProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api_app_pizza_flutter.Models.Topping", b =>
                {
                    b.HasOne("api_app_pizza_flutter.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
